using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace MohaTemplate.Data.EF.Common
{
  public class ConnectionStringProvider
    {
      privalte static string _connectionString;
      private static readonly object ConnectionStringLock = new object();
      private readonly Configuration Configuration;

      public ConnectionStringProvider(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public string ConnectionString
        {
            get
            {
                if (_connectionString == null)
                {
                    lock (ConnectionStringLock)
                    {
                        if (_connectionString == null)
                        {
                            _connectionString = Configuration["ConnectionStrings:SqlDBConnectionString"];

                            bool.TryParse(Configuration["ConnectionStrings:Debug"], out bool debug);
                            if (!debug)
                            {
                                //_connectionString = Crypto.ConnectionStringDecrypt(_connectionString);                                _connectionString = Crypto.ConnectionStringDecrypt(_connectionString);
                            }
                        }
                    }
                }

                return _connectionString;
            }
        }

       public static DbContextOptions GetOptions(IConfiguration configuration)
        {
            var provider = new ConnectionStringProvider(configuration);

            return SqlServerDbContextOptionsExtensions
                .UseSqlServer(new DbContextOptionsBuilder(), provider.ConnectionString)
                .UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking)
                .Options;
        }
    }
}
