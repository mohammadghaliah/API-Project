using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.HttpsPolicy;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using MohaTemplate.Core;
using MohaTemplate.Core.Repositories;
using MohaTemplate.Core.Services;
using MohaTemplate.Data.EF.Repositories;
using MohaTemplate.Data.MySQL;
using MohaTemplate.Data.Oracle;
using MohaTemplate.Data.SQL;
using MohaTemplate.Infra.Services;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace MohaTemplate.API
{
  public class Startup{
    public Startup(IConfiguration configuration)
        {
        }
        public IConfiguration Configuration { get; }

                // This method gets called by the runtime. Use this method to add services to the container.

                public void ConfigureServices(IServiceCollection services)
        {
            services.AddScoped<IDbContext, SqlDbContext>();
            //services.AddScoped<IDbContext, OracleDbContext>();
            //services.AddScoped<IDbContext, MySqlDbContext>();
            services.AddScoped<IAccountService, AccountService>();
            services.AddScoped<IAccountRepository, AccountRepository>();
            services.AddControllers();
        }

                // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.

public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseHttpsRedirection();

            app.UseRouting();

            app.UseAuthorization();

            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllers();
            });
        }
  }
}
